name: build

on:
  push:
    tags:
      - 'v*.*.*'  # 触发于 v1.0.0 等标签

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史，用于生成 release notes

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install \
            build-essential \
            g++-12 \
            clang-15 \
            autoconf \
            automake \
            autotools-dev \
            autopoint \
            libtool \
            pkg-config \
            libssl-dev \
            libgnutls28-dev \
            libc-ares-dev \
            zlib1g-dev \
            libsqlite3-dev \
            libssh2-1-dev \
            libcppunit-dev\
            libxml2-dev \
            libunistring-dev \
            libp11-kit-dev

      - name: Setup gcc (Linux)
        run: |
          echo 'CC=gcc-12' >> $GITHUB_ENV
          echo 'CXX=g++-12' >> $GITHUB_ENV

      - name: Libtool
        run: |
          autoreconf -i

      - name: Disable BitTorrent
        run: |
          FEATURE_FLAGS="$FEATURE_FLAGS --disable-bittorrent"
          echo 'FEATURE_FLAGS='"$FEATURE_FLAGS" >> $GITHUB_ENV

      - name: Autogen and configure
        run: |
          autoreconf -i
          # LDFLAGS="-static" ./configure --enable-static --disable-shared --without-gnutls --with-openssl $FEATURE_FLAGS
          # 关键：配置编译参数
          # ARIA2_STATIC=yes 是 aria2 构建系统的一个特性，它会优先寻找静态库
          # LDFLAGS="-static-libgcc -static-libstdc++" 会静态链接 GCC 和 C++ 的运行时库，增强可移植性
          export ARIA2_STATIC=yes
          # export PKG_CONFIG_PATH="/usr/lib/x86_64-linux-gnu/pkgconfig:$PKG_CONFIG_PATH"
          ./configure \
            --without-gnutls \
            --with-openssl \
            --with-libssh2 \
            --with-libcares \
            --with-libz \
            --with-libxml2 \
            --with-sqlite3 \
            $FEATURE_FLAGS \
            LDFLAGS="-static-libgcc -static-libstdc++"

      - name: Build
        run: make -j$(nproc) V=1 # V=1 会输出详细的编译命令，有助于调试

      - name: Verify dependencies
        run: |
          echo "--- Checking linked shared libraries for aria2c ---"
          # 执行 ldd 命令来验证链接结果
          # 理想情况下，除了核心系统库（如 linux-vdso, libc, ld-linux），不应再看到 libssh2, libcares 等库
          ldd src/aria2c
          echo "----------------------------------------------------"

      - name: Package binary
        run: |
          strip src/aria2c  # 剥离符号减小文件大小
          tar -czf aria2-${{ github.ref_name }}-linux-x86_64.tar.gz src/aria2c

      - name: Upload to release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            aria2-${{ github.ref_name }}-linux-x86_64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
